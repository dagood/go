# Copyright (c) Microsoft Corporation.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

# This template defines the build/test matrix: based on the given flags, it determines which
# builders should run and creates a job for each.

parameters:
  innerloop: false
  outerloop: false
  sign: false
  createSourceArchive: false

jobs:
  - template: shorthand-builders-to-builders.yml
    parameters:
      jobsTemplate: builders-to-jobs.yml
      jobsParameters:
        sign: ${{ parameters.sign }}
        createSourceArchive: ${{ parameters.createSourceArchive }}
      shorthandBuilders:
        - ${{ if eq(parameters.innerloop, true) }}:
          - { os: linux, arch: amd64, config: buildandpack }
          - { os: linux, arch: amd64, config: devscript }
          - { os: linux, arch: amd64, config: test }
          - { os: linux, arch: amd64, config: test, distro: ubuntu }
          - { os: windows, arch: amd64, config: buildandpack }
          - { os: windows, arch: amd64, config: devscript }
          - { os: windows, arch: amd64, config: test }
          - { os: linux, arch: arm, hostArch: amd64, config: buildandpack }
          # Only build arm64 if we're running a signed (internal, rolling) build. Avoid contention
          # with other projects' builds that use the same limited-capacity pool of arm64 agents.
          - ${{ if eq(parameters.sign, true) }}:
            - { os: linux, arch: arm64, config: buildandpack }
        - ${{ if eq(parameters.outerloop, true) }}:
          # Upstream builders.
          - { os: linux, arch: amd64, config: clang }
          - { os: linux, arch: amd64, config: longtest }
          - { os: linux, arch: amd64, config: nocgo }
          - { os: linux, arch: amd64, config: noopt }
          - { os: linux, arch: amd64, config: race }
          # - { os: linux, arch: amd64, config: racecompile } https://github.com/microsoft/go/issues/54
          - { os: linux, arch: amd64, config: regabi }
          - { os: linux, arch: amd64, config: ssacheck }
          - { os: linux, arch: amd64, config: staticlockranking }
